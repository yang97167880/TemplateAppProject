Index: app/src/main/java/com/yiflyplan/app/fragment/organization/components/Share.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/*\n * Copyright (C) 2021 xuexiangjys(xuexiangjys@163.com)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *       http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\npackage com.yiflyplan.app.fragment.organization.components;\n\nimport android.annotation.SuppressLint;\nimport android.graphics.Bitmap;\nimport android.graphics.BitmapFactory;\nimport android.graphics.drawable.BitmapDrawable;\nimport android.os.Bundle;\nimport android.util.Log;\nimport android.view.View;\nimport android.widget.ImageView;\nimport android.widget.TextView;\n\nimport com.xuexiang.xpage.annotation.Page;\nimport com.xuexiang.xqrcode.XQRCode;\nimport com.xuexiang.xqrcode.util.QRCodeAnalyzeUtils;\nimport com.xuexiang.xui.widget.dialog.bottomsheet.BottomSheet;\nimport com.xuexiang.xutil.display.ImageUtils;\nimport com.xuexiang.xutil.file.FileUtils;\nimport com.yiflyplan.app.R;\nimport com.yiflyplan.app.core.BaseFragment;\nimport com.yiflyplan.app.core.http.MyHttp;\nimport com.yiflyplan.app.fragment.components.DrawablePreviewFragment;\nimport com.yiflyplan.app.utils.TokenUtils;\nimport com.yiflyplan.app.utils.XToastUtils;\n\nimport org.json.JSONException;\nimport org.json.JSONObject;\n\nimport java.io.File;\nimport java.io.InputStream;\nimport java.util.LinkedHashMap;\n\nimport androidx.annotation.NonNull;\nimport butterknife.BindView;\n\nimport static com.yiflyplan.app.fragment.components.DrawablePreviewFragment.BITMAP;\nimport static com.yiflyplan.app.fragment.components.DrawablePreviewFragment.DRAWABLE_ID;\nimport static com.yiflyplan.app.utils.ImageConversionUtil.base64ToBitmap;\nimport static com.yiflyplan.app.utils.ImageConversionUtil.bitmapToBase64;\nimport static com.yiflyplan.app.utils.ImageConversionUtil.truncateHeadString;\n\n@Page(name = \"分享机构\", extra = R.drawable.ic_share)\npublic class Share extends BaseFragment implements View.OnClickListener, View.OnLongClickListener {\n    @BindView(R.id.iv_organization_qrcode)\n    ImageView ivOrganizationQrcode;\n    @BindView(R.id.tv_organization_name)\n    TextView tvOrganizationName;\n\n    private Bitmap qrCode;\n\n    @Override\n    protected int getLayoutId() {\n        return R.layout.fragment_share_organization;\n    }\n\n    @Override\n    protected void initViews() {\n        ivOrganizationQrcode.setImageBitmap(qrCode);;\n    }\n    \n    @Override\n    protected void initListeners() {\n        super.initListeners();\n        ivOrganizationQrcode.setOnClickListener(this);\n        ivOrganizationQrcode.setOnLongClickListener(this);\n\n        Bundle build = getArguments();\n        int id = build.getInt(\"id\");\n        LinkedHashMap<String,String> params = new  LinkedHashMap<>();\n        params.put(\"organizationId\",String.valueOf(id));\n        MyHttp.get(\"/organization/getTheQrCodeOfTheOrganization\",TokenUtils.getToken(), params, new MyHttp.Callback() {\n            @Override\n            public void success(JSONObject data) throws JSONException {\n                String qrCodeBase64 = data.getString(\"qrCode\");\n                qrCode = base64ToBitmap(qrCodeBase64,\"data:img/jpeg;base64,\");\n                ivOrganizationQrcode.setImageBitmap(qrCode);\n            }\n\n            @Override\n            public void fail(JSONObject error) {\n\n            }\n        });\n    }\n\n    @Override\n    public void onClick(View v) {\n        Bundle bundle = new Bundle();\n        switch (v.getId()) {\n            case R.id.iv_organization_qrcode:\n                bundle.putParcelable(BITMAP, qrCode);\n                //bundle.putInt(DRAWABLE_ID, R.drawable.img_xui_qq);\n                openPage(DrawablePreviewFragment.class, bundle);\n                break;\n                default:\n        }\n\n    }\n\n    @Override\n    public boolean onLongClick(View v) {\n        if (v instanceof ImageView) {\n            showBottomSheetList(v, ImageUtils.drawable2Bitmap(((ImageView) v).getDrawable()));\n        }\n        return true;\n    }\n\n    @NonNull\n    private String getImgFilePath(View v) {\n        return FileUtils.getDiskFilesDir() + File.separator + v.getTag() + \".png\";\n    }\n\n    private void showBottomSheetList(View v, final Bitmap bitmap) {\n        final String imgPath = getImgFilePath(v);\n        new BottomSheet.BottomListSheetBuilder(getActivity())\n                .addItem(\"发送给朋友\")\n                .addItem(\"保存图片\")\n                .addItem(\"识别图中的二维码\")\n                .setOnSheetItemClickListener((dialog, itemView, position, tag) -> {\n                    dialog.dismiss();\n                    boolean result = checkFile(imgPath, bitmap);\n                    switch (position) {\n                        case 0:\n                            if (result) {\n//                                SocialShareUtils.sharePicture(getActivity(), PathUtils.getUriForFile(FileUtils.getFileByPath(imgPath)));\n                            } else {\n                                XToastUtils.toast(\"图片发送失败!\");\n                            }\n                            break;\n                        case 1:\n                            if (result) {\n                                XToastUtils.toast(\"图片保存成功:\" + imgPath);\n                            } else {\n                                XToastUtils.toast(\"图片保存失败!\");\n                            }\n                            break;\n                        case 2:\n                            if (result) {\n                                XQRCode.analyzeQRCode(imgPath, new QRCodeAnalyzeUtils.AnalyzeCallback() {\n                                    @Override\n                                    public void onAnalyzeSuccess(Bitmap mBitmap, String result) {\n//                                        if (NetworkUtils.isUrlValid(result)) {\n//                                            goWeb(result);\n//                                        }\n                                    }\n\n                                    @Override\n                                    public void onAnalyzeFailed() {\n                                        XToastUtils.toast(\"解析二维码失败！\");\n                                    }\n                                });\n                            } else {\n                                XToastUtils.toast(\"二维码识别失败!\");\n                            }\n                            break;\n                        default:\n                            break;\n                    }\n                })\n                .build()\n                .show();\n    }\n\n    private boolean checkFile(String imgPath, Bitmap bitmap) {\n        boolean result = FileUtils.isFileExists(imgPath);\n        if (!result) {\n            result = ImageUtils.save(bitmap, imgPath, Bitmap.CompressFormat.PNG);\n        }\n        return result;\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/yiflyplan/app/fragment/organization/components/Share.java	(revision 299926203820fda39f7b8a0b9612b4fa0cd65775)
+++ app/src/main/java/com/yiflyplan/app/fragment/organization/components/Share.java	(date 1618068289000)
@@ -74,7 +74,7 @@
     protected void initViews() {
         ivOrganizationQrcode.setImageBitmap(qrCode);;
     }
-    
+
     @Override
     protected void initListeners() {
         super.initListeners();
